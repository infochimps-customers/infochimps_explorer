.doc= textilize(@icss.doc)

- @icss.messages.each do |message_name, message| 

  .message.niceform-fake{ :id => "message-#{message.name}" }
    %h2== #{h message.name} API Call

    %blockquote.sample_url== <span>GET<span> <code>#{h message.api_url}</code>

    %h3 Parameters

    .parameters
      = render_partial :partial => 'icss_record', :locals => {:record => message.request.first.type, :expand_referenced_types => true }

    %h3 Response

    .response
      = render_partial :partial => 'icss_record', :locals => {:record => message.response, :expand_referenced_types => true } 

    .message= textilize(message.doc)

%hr/

%h2 Types

- @icss.types.each do |type|
  .type.niceform-fake
    %h3== #{h type.name}
    = render_partial :partial => :icss_record, :locals => { :record => type }

              
-# Note: this partial is SHARED between george and apey_eye. Please DO NOT
-# introduce any coupling between these partials and the rest of george, and be
-# VERY CONSERVATIVE in your use of rails view helpers.
-#
-# The true canonical version of this file is the one that lives in george. The
-# apey_eye team has responsibility to pull upstream changes, the george team
-# has the responsibility to make these straightforward.
-#
-# If this request conflicts with being effective, then a) be effective, b) talk
-# to flip so he can help find a workaround
-#    
-# To airlift this into apeyeye: change all occurences of 'render' with 'render_partial'
-# (and vice versa in george)
